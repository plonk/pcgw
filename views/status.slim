- content_for :title do
  | チャンネル / #{@info['info']['name']}

script src="/reloader.js"

.row
  .col-md-8
    h1
      = @info['info']['name']
      == erb :tweet_button, locals: { link_url: @link_url, data_text: @data_text }
      .btn-group style="vertical-align: -0.07em;"
        button.btn.btn-default.dropdown-toggle type="button" data-toggle="dropdown" aria-expanded="false"
          |  更新の間隔
          span#refresh-interval
          | 秒
          span.caret style="margin-left: 0.5em"
          span.sr-only
            | ドロップダウンをトグルします
        ul.dropdown-menu[role="menu"]
          li
            a href="#" onclick="changeInterval(1)"
              | 1秒
          li
            a href="#" onclick="changeInterval(3)"
              | 3秒
          li
            a href="#" onclick="changeInterval(5)"
              | 5秒
          li
            a href="#" onclick="changeInterval(10)"
              | 10秒

    p#error style="color: red"

    .alert.alert-warning#warning style="display: none"

    table.table.head-keep
      tr
        th メディア URL
        td
          span.text-info#source.url
            = @channel.push_uri
          - if @channel.stream_key
            br
            span style="margin-right: 1em" ストリームキー
            span.text-info
              = @channel.stream_key
      tr
        th 状態
        td
          span#status
          a.btn.btn-default.btn-xs style="margin-left: 0.5em" href="/channels/#{@channel.id}/reset" onclick="$(window).off('beforeunload')" title="エンコーダーとの現在の接続を破棄し、待ち受け状態に戻します(FLV の場合)。"
            span.glyphicon.glyphicon-refresh
            |  リセット
      tr
        th リレー時間
        td
          span#uptime
      tr
        th ビットレート
        td
          span#bitrate
          | Kbps
      tr
        th リスナー/リレー
        td
          span#direct
          |  /
          span#relay
          |
          a.btn.btn-default.btn-xs href="/channels/#{@channel.id}/relay_tree" target="_blank"
            span.glyphicon.glyphicon-new-window
            |  リレーツリー
      tr
        th 直下接続
        td
          #connections
      tr
        th ジャンル
        td
          span#genre
      tr
        th 詳細
        td
          span#desc
      tr
        th コメント
        td
          span#comment
      tr
        th コンタクト URL
        td
          a#contact target="_blank"
      tr
        th 掲載YP
        td
          == slim :yellow_page_links, locals: { yp_names: [@channel.channel_info.yp] }

    div
      form action="/channels/#{@channel.id}/stop" method="POST" role="form"
        div.btn-group.btn-group-justified role="group"
          .btn-group
            button.btn.btn-warning type="submit" onclick="$(window).off('beforeunload')" 配信停止
          .btn-group
            a.btn.btn-default href="/channels/#{@channel.id}/edit" onclick="$(window).off('beforeunload')" 詳細変更
          .btn-group
            a.btn.btn-default href="/channels/#{@channel.id}/play" target="_blank"
              span class="glyphicon glyphicon-new-window"
              |  再生

  .col-md-4.hidden-sm.hidden-xs
    .reloader data-url="/includes/channel_switcher" data-interval=60

javascript:
  var g_interval;
  function changeInterval(int) {
    g_interval = int;
    $("#refresh-interval").text(int);
  }
  $(function() {
    var timeoutSec = 10;
    changeInterval(5); // Peercast のデータレート更新が5秒ごとなので5
                       // 秒が良いと思う。
    var recur = function() {
      $.ajax({
        url: '/channels/#{@channel.id}/update',
        dataType: "script",
        success: function (script, textStatus, jqxhr) {
          $('table').fadeTo(0, 1.0);
          $('#warning').hide();
          setTimeout(recur, g_interval * 1000);
        },
        error: function (jqxhr, textStatus, exception) {
          $('table').fadeTo(1000, 0.5);
          $('#warning').text("サーバーから"+timeoutSec+"秒間応答がありませんでした。").fadeTo(1000, 1.0);
          setTimeout(recur, g_interval * 1000);
        },
        timeout: timeoutSec * 1000,
      });
    };
    recur();
  });
