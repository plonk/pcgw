- content_for :title do
  | チャンネル / #{@info['info']['name']}

script src="/reloader.js"

.row
  .col-md-12
    div
      h1 style="display: inline"
        = @info['info']['name']
      == erb :tweet_button, locals: { link_url: @link_url, data_text: @data_text }
      .btn-group style="vertical-align: -0.07em;"
        button.btn.btn-default.dropdown-toggle type="button" data-toggle="dropdown" aria-expanded="false"
          |  更新の間隔
          span#refresh-interval ∞
          | 秒
          span.caret style="margin-left: 0.5em"
        ul.dropdown-menu[role="menu"]
          li
            a href="#" onclick="changeInterval(1)"
              | 1秒
          li
            a href="#" onclick="changeInterval(3)"
              | 3秒
          li
            a href="#" onclick="changeInterval(5)"
              | 5秒
          li
            a href="#" onclick="changeInterval(10)"
              | 10秒

    p#error style="color: red"

    .alert.alert-warning#warning style="display: none"

    table.table.head-keep
      tr
        th メディア URL
        td
          code#source.url.text-info
            = @channel.push_uri
          - if @channel.stream_key
            span
              | &emsp;ストリームキー&nbsp;
            code.text-info #{@channel.stream_key}
      tr
        th 配信サーバー
        td
          = @channel.servent.name
          span.text-muted
            |  #{@channel.servent.hostname}:#{@channel.servent.port}
      tr
        th
          | 同時配信
          sup
            a href="/doc/repeaters"
              | ?
        td
          span#repeater_status
            = @repeater_status
          | &nbsp;
          - if @channel.channel_info.stream_type == "FLV"
            a.btn.btn-default.btn-xs href="/channels/#{@channel.id}/create_repeater"
              | 外部サーバーに送信...
            | &nbsp;
            a.btn.btn-warning.btn-xs href="/channels/#{@channel.id}/stop_repeater"
              | 停止
          - else
            a.btn.btn-default.btn-xs href="/channels/#{@channel.id}/create_repeater" disabled=true
              | 外部サーバーに送信...
            | &nbsp;
            a.btn.btn-warning.btn-xs href="/channels/#{@channel.id}/stop_repeater" disabled=true
              | 停止
      tr
        th 稼動時間
        td
          span#uptime
            = TimeUtil.render_duration @status['uptime']
      tr
        th 接続状態
        td
          span#status style="margin-right: 0.5em" class=@status_class
            = @status['status']
          - if @channel.servent.can_restart_channel_connection?
            a.btn.btn-default.btn-xs style="margin-left: 0.5em; margin-right: 0.5em" href="/channels/#{@channel.id}/reset" title="エンコーダーとの現在の接続を破棄し、待ち受け状態に戻します(FLV の場合)。"
              span.glyphicon.glyphicon-refresh
              |  リセット
          div style="display: inline-block; height: 1em; line-height: 1.0em; text-align: center; vertical-align: middle; transform: translate(0px, -30px)"
            div.text-muted style="font-size: 10px; transform: translate(0px, 17px)" ▼
            br
            meter#bitrate_meter value="#{'%.2f' % @bitrate_meter}" max="1.0" min="0.0" low="0.25" high="0.75" optimum="0.5"
          span#source_rate style="margin-left: 0.5em"
            = @source_kbps
          | Kbps
      tr
        th 公称ビットレート
        td
          span#bitrate
            = @info['info']['bitrate']
          | Kbps
      tr
        th リスナー/リレー
        td
          span#direct
            = @status['totalDirects']
          |  /&nbsp;
          span#relay
            = @status['totalRelays']
          - if @channel.servent.can_get_relay_tree?
            | &nbsp;
            a.btn.btn-default.btn-xs href="/channels/#{@channel.id}/relay_tree" target="_blank"
              span.glyphicon.glyphicon-new-window
              | リレーツリー
      tr
        th 直下接続
        td
          #connections
            == @connections
      tr
        th ジャンル
        td #{@info['info']['genre']}
      tr
        th 詳細
        td #{@info['info']['desc']}
      tr
        th コメント
        td #{@info['info']['comment']}
      tr
        th コンタクト URL
        td
          a target="_blank" href=@info['info']['url'] #{@info['info']['url']}
      tr
        th 掲載YP
        td
          == slim :yellow_page_links, locals: { yp_names: [@channel.channel_info.yp] }

    div
      form action="/channels/#{@channel.id}/stop" method="POST" role="form"
        div.btn-group.btn-group-justified role="group"
          .btn-group
            button.btn.btn-warning type="submit" 配信停止
          .btn-group
            a.btn.btn-default href="/channels/#{@channel.id}/edit" 詳細変更
          .btn-group
            a.btn.btn-default href="/channels/#{@channel.id}/play" target="_blank"
              span class="glyphicon glyphicon-new-window"
              |  再生

javascript:
  var g_interval;
  function changeInterval(int) {
    g_interval = int;
    $("#refresh-interval").text(int);
  }
  $(function() {
    var timeoutSec = 10;
    changeInterval(5); // Peercast のデータレート更新が5秒ごとなので5
                       // 秒が良いと思う。
    var recur = function() {
      $.ajax({
        url: '/channels/#{@channel.id}/update',
        dataType: "script",
        success: function (script, textStatus, jqxhr) {
          $('table').fadeTo(0, 1.0);
          $('#warning').hide();
          setTimeout(recur, g_interval * 1000);
        },
        error: function (jqxhr, textStatus, exception) {
          $('table').fadeTo(1000, 0.5);
          $('#warning').text("サーバーから"+timeoutSec+"秒間応答がありませんでした。").fadeTo(1000, 1.0);
          setTimeout(recur, g_interval * 1000);
        },
        timeout: timeoutSec * 1000,
      });
    };
    setTimeout(recur, g_interval * 1000);
  });
